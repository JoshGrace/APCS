
public class hdasd {
	 public static void main( String[] args )
	    {
		 int[] a = { 0, 1, 2, 3, 4, 5 };
		 mergeSort(a, 0, 6);
	    }
	// precondition: 
//   0 <= p <= mid < q < a.length, and a is sorted from index p 
//   through index mid and from index (mid + 1) through index q 
//postcondition: 
//   this performs an in-place merge of array a, so that, on exit, 
//   array a is sorted from index p through index q 
public static void merge( int[] a, int p, int mid, int q ) 
{ 
// <code not shown> 
} 

public static void mergeSort( int[] a, int low, int high ) 
{ 
if ( a.length == 1 || low >= high ) 
  return; 

int mid1 = ( ( 2 * low ) + high ) / 3; 
int mid2 = ( low + ( 2 * high ) ) / 3; 

mergeSort( a, low, mid1 ); 
mergeSort( a, mid1 + 1, mid2 ); 
mergeSort( a, mid2 + 1, high ); 

// <missing code> 
merge( a, low, mid1, high ); 
merge( a, low, mid2, high );
for(int b : a)
System.out.println(b);
}
}
