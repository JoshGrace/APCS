package com.eimacs.lab07gui;

import com.eimacs.lab07.*;
import java.util.ArrayList;

/**
 *
 * @author IMACS Curriculum Development Group
 * @version 2.0 January 2015
 */
public class Lab07Runner
{
    public static void main( String[] args )
    {
    	final int NTESTS = 100;
    	final int ARRSIZE = 100;

    	ArrayList<ArrayList<Integer>> a = arrayListOfArrayLists( NTESTS, ARRSIZE );
    	APTimer timer = new APTimer();
    	//Sort s = new SelectionSort();
    	Sort s = new InsertionSort();
    	//Sort s = new MergeSort();

    	timer.start();
    	for ( ArrayList<Integer> aList : a )
    	  s.sortList( aList );
    	timer.stop();

    	System.out.println( "Average time to sort an ArrayList of size " + ARRSIZE +
    	                    ": " + (timer.interval() / (double)NTESTS) + " ms." );
    }
    /* 
     * Random number generator 
     * 
     * @param n  a positive integer 
     * @return an integer chosen at random from 0 through n-1 
     */ 
    public static int random( int n ) 
    { 
      return (int)(n * Math.random()); 
    } 

    // Define the static method randomArrayList here
    public static ArrayList<Integer> randomArrayList(int amount){
        ArrayList<Integer> returnVal = new ArrayList<Integer>();
        for(int i = 0; i < amount; i++){
            returnVal.add(i, random(1000));
        }
        return returnVal;
    } 
    // Define the static method arrayListOfArrayLists here
    public static ArrayList<ArrayList<Integer>> arrayListOfArrayLists(int m, int n){
        ArrayList<ArrayList<Integer>> numbers = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> num;
        for(int i = 0; i < m; i++){
            num = new ArrayList<Integer>();
            for( int x = 0; x < n; x++){
                num.add(x, random(1000));
            }
            numbers.add(i, num);
        }
        return numbers;
    }
}
